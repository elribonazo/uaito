name: Build and Release Electron App

on:
  workflow_dispatch:

env:
  APPLE_ID: ${{ secrets.APPLE_ID }}
  APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  CSC_LINK: ${{ secrets.CSC_LINK }}
  CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  IDENTITY: ${{ secrets.IDENTITY }}
  BUNDLEID: ${{ secrets.BUNDLEID }}
  TARGET_REPO: ${{ secrets.TARGET_REPO }}
  TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
  ENDPOINT: ${{ vars.UAITO_ENDPOINT }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

permissions:
  contents: write
  actions: read
  packages: write
  id-token: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3

      - name: Cache electron and electron-builder
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install rpm
          npm install
          npx -y playwright@1.46.0 install --with-deps  
          npm run build:all
        env:
          ENDPOINT: ${{ env.ENDPOINT }}

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install python visualcpp-build-tools -y
          choco install pkgconfiglite -y
          choco install gtk-runtime
          npm install --build-from-source canvas@next
          npm install --omit=optional
          npx electron-builder install-app-deps
          npx -y playwright@1.46.0 install --with-deps  
          npm run build:all
        env:
          ENDPOINT: ${{ env.ENDPOINT }}

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run package:mac -- --publish always
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          ENDPOINT: ${{ env.ENDPOINT }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run package:win -- --publish always
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          ENDPOINT: ${{ env.ENDPOINT }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}